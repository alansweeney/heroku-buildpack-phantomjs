#!/bin/sh

set -e

BUILD_DIR=$1
CACHE_DIR=$2

# config
### VERSION="1.9.8"
VERSION="1.9"

# Buildpack URL
### ARCHIVE_NAME=phantomjs-${VERSION}-linux-x86_64
ARCHIVE_NAME=phantomjs-${VERSION}-with-webfont
FILE_NAME=${ARCHIVE_NAME}.tar.bz2
### BUILDPACK_PHANTOMJS_PACKAGE=https://bitbucket.org/ariya/phantomjs/downloads/${FILE_NAME}
BUILDPACK_PHANTOMJS_PACKAGE=http://darkhorseanalytics.com/phantomjs/${FILE_NAME}

mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "-----> Fetching PhantomJS ${VERSION} binaries at ${BUILDPACK_PHANTOMJS_PACKAGE}"
  curl $BUILDPACK_PHANTOMJS_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME
  curl https://darkhorseanalytics.com/phantomjs/libstdc++.so.6 -L -s -o $CACHE_DIR/libstdc++.so.6
  curl https://darkhorseanalytics.com/phantomjs/libc.so.6 -L -s -o $CACHE_DIR/libc.so.6
fi

echo "-----> Extracting PhantomJS ${VERSION} binaries to ${BUILD_DIR}/vendor/phantomjs"
mkdir -p $CACHE_DIR/$ARCHIVE_NAME
mkdir -p $BUILD_DIR/vendor
tar jxf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/$ARCHIVE_NAME $BUILD_DIR/vendor/phantomjs
mv $CACHE_DIR/libstdc++.so.6 $BUILD_DIR/vendor/phantomjs/bin/libstdc++.so.6
mv $CACHE_DIR/libstdc++.so.6 $BUILD_DIR/vendor/phantomjs/bin/libc.so.6
echo "-----> This version downloads the library files"

echo "-----> exporting PATH and LIBRARY_PATH"
PROFILE_PATH="$BUILD_DIR/.profile.d/phantomjs.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$PATH:vendor/phantomjs/bin"' >> $PROFILE_PATH
echo 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:vendor/phantomjs/bin"' >> $PROFILE_PATH
